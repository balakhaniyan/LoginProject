@using LoginAndSignUp
@model SignUpViewModel
@{
    ViewData["Title"] = "ثبت نام";
}
<h1>@ViewData["Title"]</h1>

<form method="post" asp-controller="Home" asp-action="SignUp">
    <div class="input-holder invalid-input initial">
        <input asp-for="FirstName" id="first_name">
        <span class="problem_part"><i class="fa fa-exclamation-circle" aria-hidden="true"></i></span>
        <label>نام</label>
    </div>
    <div class="input-holder invalid-input initial">
        <input asp-for="LastName" id="last_name">
        <span class="problem_part"><i class="fa fa-exclamation-circle" aria-hidden="true"></i></span>
        <label>نام خانوادگی</label>
    </div>
    <div class="input-holder invalid-input initial">
        <input asp-for="UserName" id="user_name" class="ltr-input">
        <span class="problem_part"><i class="fa fa-exclamation-circle" aria-hidden="true"></i></span>
        <label>نام کاربری</label>
    </div>
    <div class="input-holder invalid-input initial">
        <input asp-for="Email" id="email" class="ltr-input">
        <span class="problem_part"><i class="fa fa-exclamation-circle" aria-hidden="true"></i></span>
        <label>رایانامه</label>
    </div>
    <div class="input-holder invalid-input initial">
        <input asp-for="Password" id="password" class="ltr-input" type="password">
        <span class="problem_part"><i class="fa fa-exclamation-circle" aria-hidden="true"></i></span>
        <label>رمز عبور</label>
    </div>
    <div class="input-holder invalid-input initial">
        <input asp-for="ConfirmPassword" id="confirm_password" class="ltr-input" type="password">
        <span class="problem_part"><i class="fa fa-exclamation-circle" aria-hidden="true"></i></span>
        <label>تکرار رمز عبور</label>
    </div>
    <div class="form-buttons-holder">
        <input class="submit-input" type="submit" value="ثبت"><input type="reset" value="پاک کردن">
    </div>
</form>
@section Scripts
    {
    <script>
        let email_regex = /@Html.Raw(Email.EMAIL_REGEX_STRING)/;
        let password_config = JSON.parse(@Html.Raw(Json.Serialize(@Model.Validation.PasswordConfig.ToJson())));
        let signup_problems = JSON.parse(@Html.Raw(Json.Serialize(@Model.Validation.SignUpProblems.ToJson())));
        let symbols = "@Html.Raw(Password.SYMBOLS)";

        if (password_config.RequiredSpecial) {
            password_config.RequiredSpecial = symbols;
        }

        $("#email").on("input", function () {
            let email = $(this).val();
            if (email_regex.test(email)) {
                $(this).parent(".input-holder").removeClass("invalid-input");
                $(this).parent(".input-holder").addClass("valid-input");
            }
            else {
                $(this).parent(".input-holder").removeClass("valid-input");
                $(this).parent(".input-holder").addClass("invalid-input");
            }
        });

        $("#password").on("input", function () {
            let password = $(this).val();
            let confirm_password = $("#confirm_password").val();
            let password_problems = Password.checkPassword(password, password_config);
            if (Object.values(password_problems).length == 0) {
                $(this).parent(".input-holder").removeClass("invalid-input");
                $(this).parent(".input-holder").addClass("valid-input");
            }
            else {
                $(this).parent(".input-holder").removeClass("valid-input");
                $(this).parent(".input-holder").addClass("invalid-input");
            }
            if (password == confirm_password) {
                $("#confirm_password").parent(".input-holder").removeClass("invalid-input");
                $("#confirm_password").parent(".input-holder").addClass("valid-input");
            }
            else {
                $("#confirm_password").parent(".input-holder").removeClass("valid-input");
                $("#confirm_password").parent(".input-holder").addClass("invalid-input");
            }
        });

        $("#confirm_password").on("input", function () {
            let password = $("#password").val();
            let confirm_password = $(this).val();
            if (password == confirm_password) {
                $(this).parent(".input-holder").removeClass("invalid-input");
                $(this).parent(".input-holder").addClass("valid-input");
            }
            else {
                $(this).parent(".input-holder").removeClass("valid-input");
                $(this).parent(".input-holder").addClass("invalid-input");
            }
        });

        $("#first_name, #last_name, #user_name").on("input", function () {
            let first_name = $(this).val();
            if (first_name.length > 0) {
                $(this).parent(".input-holder").removeClass("invalid-input");
                $(this).parent(".input-holder").addClass("valid-input");
            }
            else {
                $(this).parent(".input-holder").removeClass("valid-input");
                $(this).parent(".input-holder").addClass("invalid-input");
            }
        });

        $("#first_name, #last_name, #user_name, #email, #password, #confirm_password").on("focus", function () {
            $(this).parent(".input-holder").removeClass("initial");
        }).on("keyup", function (e) {
            @* !$(document).find(".invalid-input").length ? $(".submit-input").removeAttr("disabled") : $(".submit-input").attr("disabled", "disabled"); *@
        });
    </script>
}